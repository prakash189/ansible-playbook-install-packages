---
- hosts: all

  become: yes
  become_method: sudo
  remote_user: ubuntu
  vars_files:
    - vars/main.yml

  tasks:
  - name: Update apt-get repo and cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      
  # - name: install JDK 11
  #   apt:
  #     name: openjdk-11-jdk
  #     state: present    

  # - name: install ansible
  #   apt:
  #     name: ansible
  #     state: present

  # - name: install python3
  #   apt:
  #     name: python3
  #     state: present
  # - name: install php
  #   apt:
  #     name: php
  #     state: present

  # - name: install pip3
  #   apt:
  #     name: python3-pip
  #     state: present

  # - name: install lxml
  #   pip:
  #     name: lxml 

  # - name: install unzip
  #   apt: 
  #     name: unzip
  #     state: present

  # - name: download the sonarqube community
  #   unarchive:
  #     src: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.1.0.47736.zip
  #     dest: /home/ubuntu/
  #     remote_src: yes

  # - name: Change ownership for sonarquebe
  #   file:
  #     path: /home/ubuntu/sonarqube-9.1.0.47736
  #     owner: ubuntu
  #     group: ubuntu
  #     mode: "u+rwx,g+rx,o=rx"
  #     recurse: yes
  #     state: directory
  
  # - name: Ensure bash, OpenSSl, and libssl are the latest versions
  #   apt: 
  #     name: 
  #       - bash
  #       - openssl
  #       - libssl-dev
  #       - libssl-doc
  #     update_cache: true 
  #     state: latest
  #     tags: packages

  - name: Install PostgreSQL
    apt: 
      pkg: postgresql
      state: present
      update_cache: true 
      tags: packages

  - name: Ensure the PostgreSQL service is running
    service: 
      name: postgresql 
      state: started 
      enabled: yes

  - name: Ensure database is created
    postgresql_db: 
      name: "{{ db_name }}"
      state: present
    become: yes
    become_user: postgres

  - name: Ensure user has access to the database
    postgresql_user: 
      db: "{{ db_name }}"
      name: "{{ db_user }}"
      password: "{{ db_password }}"
      priv: ALL
      state: present
    become: yes
    become_user: postgres

  - name: Ensure user does not have unnecessary privileges
    postgresql_user: 
      name: "{{ db_user }}"
      role_attr_flags: NOSUPERUSER,NOCREATEDB
      state: present
    become: yes
    become_user: postgres

  